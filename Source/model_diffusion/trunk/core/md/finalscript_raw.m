%path('mscripts',path);
% COMSOL Multiphysics Model M-file
% Generated by I-SIMPA

% COMSOL version
clear vrsn
vrsn.name = 'COMSOL 3.5';
vrsn.ext = '';
vrsn.major = 0;
vrsn.build = 494;
vrsn.rcs = '$Name:  $';
vrsn.date = '$Date: 2008/09/19 16:09:48 $';
fem.version = vrsn;


% Constants
fem.const = {'cel','CELERITE_SON', ...
  'Vol','VOL_SCENE', ...
  'S','SURF_SCENE', ...
  'lamb','4*Vol/S', ...
  'Dif','lamb*cel/3', ...
  'r_source','0.2', ...
  'V_source','4/3*pi*r_source^3', ...
  'Pref','2e-05', ...
  'Dt','TIME_STEP', ...
  'rho','1.2' ...
  };
disp('Building model');
%sommets
verts=[
MODELVERTICES];
%faces
facearr={
MODELFACES};

% Création des objets géométriques

DOMAIN_DECLARATIONS
disp('Model builded.');
% Tableau Géométries
clear s
s.objs=DOMAIN_ARRAY;
s.name=DOMAIN_NAME_ARRAY;
s.tags=DOMAIN_NAME_TAGS;

%Définition des matériaux
MATERIALS_DECLARATION

%Définition des volumes equ
VOLUMES_DECLARATION

%Recepteurs surfaciques
R_SURF_DECLARATION

%Recepteurs ponctuels
R_PONCT_DECLARATION


fem.draw=struct('s',s);
%Analyse des modèle
%ft correspond à l'indice de translation
[fem.geom,st,ft]=geomcsg(s.objs,facearr);
fem.geom=geomcsg(fem);

% Initialize mesh
fem.mesh=meshinit(fem, ...
                  'hauto',5);

APPL_DECLARATION

% Descriptions
clear descr
descr.const= {'m','abs atmos'};
fem.descr = descr;

% ODE Settings
clear ode
clear units;
units.basesystem = 'SI';
ode.units = units;
fem.ode=ode;


% Solve problem
vec_freqid=FREQLST;
freqsize=size(vec_freqid,2);
freqcount=1;
freqstepprogress=(1/freqsize)*100*.8/6.;
for idfreq = vec_freqid
EQUATIONS_FREQUENCY_TRANSLATION    
    
    disp('Mesh domain with frequency parameters');
    % Multiphysics
    fem=multiphysics(fem);

    % Extend mesh
    fem.xmesh=meshextend(fem);
    disp(strcat('#',num2str((freqcount/freqsize)*100*.8+10-freqstepprogress*5)));
    disp('Solve problem');
    % Solve problem
    fem.sol=SOLVER_FUNCTION

    disp(strcat('#',num2str((freqcount/freqsize)*100*.8+10-freqstepprogress*4)));
    disp('Save global results');
    SaveGlobalResults(fem,rec_poncts.freqlbl{idfreq}); 
    disp(strcat('#',num2str((freqcount/freqsize)*100*.8+10-freqstepprogress*3)));             
    disp('Save surface receivers results');
    SaveRecSurfResults(rec_surf,fem,idfreq);
    disp(strcat('#',num2str((freqcount/freqsize)*100*.8+10-freqstepprogress*2)));
    disp('Save ponctual receivers results');
    SaveRecPonctResults(rec_poncts,fem,idfreq);
    
    disp(strcat('#',num2str((freqcount/freqsize)*100*.8+10-freqstepprogress)));
    freqcount=freqcount+1;
end